rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.isAdmin == true;
    }
    
    // Product and category images - public read, admin write
    match /public/{imageType}/{fileName} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User uploads (profile pictures, etc.) - public read, owner write
    match /users/{userId}/{fileName} {
      allow read: if true;
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Admin can write anywhere
    match /{allPaths=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Deny all other writes by default
    match /{allPaths=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}

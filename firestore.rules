rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.isAdmin == true;
    }
    
    // Products - public read, admin write
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Categories - public read, admin write
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Promos - public read, admin write
    match /promos/{promoId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User profiles - owner read/write
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      
      // User addresses - owner read/write
      match /addresses/{addressId} {
        allow read, write: if isOwner(userId);
      }
      
      // User cart - owner read/write
      match /cart/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Orders - authenticated create, owner read, admin write
    match /orders/{orderId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      allow update, delete: if isAdmin();
    }
  }
}
